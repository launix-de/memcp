# ORDER BY on derived-table alias

metadata:
  version: "1.0"
  description: "ORDER BY t.col where t is a subselect alias"

setup:
  - sql: "DROP TABLE IF EXISTS temperature"
  - sql: "DROP TABLE IF EXISTS sensor"
  - sql: "CREATE TABLE temperature (date INT, sensor INT, temp INT)"
  - sql: "CREATE TABLE sensor (ID INT, name VARCHAR(64))"
  - sql: |
      INSERT INTO temperature (date, sensor, temp) VALUES
      (10, 1, 21),
      (20, 1, 22),
      (15, 2, 23)
  - sql: |
      INSERT INTO sensor (ID, name) VALUES
      (1, 'S1'),
      (2, 'S2')

test_cases:
  - name: "Order by alias-qualified column"
    sql: |
      SELECT `t`.*
      FROM (SELECT `date` AS `date` FROM `temperature`) AS `t`
      ORDER BY `t`.`date` DESC
      LIMIT 2 OFFSET 0
    expect:
      rows: 2
      data:
        - date: 20
        - date: 15

  - name: "Derived alias WHERE on base column"
    sql: |
      SELECT t.*
      FROM (
        SELECT `date` AS `date`, `sensor` AS `sensor`
        FROM `temperature`
      ) AS t
      WHERE t.sensor = 1
      ORDER BY t.date DESC
      LIMIT 2
    expect:
      rows: 2
      data:
        - date: 20
          sensor: 1
        - date: 10
          sensor: 1

  - name: "Derived alias WHERE inside subselect (qualified table)"
    sql: |
      SELECT t.*
      FROM (
        SELECT `date` AS `date`, `sensor` AS `sensor`
        FROM `temperature`
        WHERE temperature.`sensor` = 1
      ) AS t
      ORDER BY t.date DESC
      LIMIT 2
    expect:
      rows: 2
      data:
        - date: 20
          sensor: 1
        - date: 10
          sensor: 1

  - name: "Derived alias WHERE inside subselect (unqualified table)"
    sql: |
      SELECT t.*
      FROM (
        SELECT `date` AS `date`, `sensor` AS `sensor`
        FROM `temperature`
        WHERE `sensor` = 1
      ) AS t
      ORDER BY t.date DESC
      LIMIT 2
    expect:
      rows: 2
      data:
        - date: 20
          sensor: 1
        - date: 10
          sensor: 1

  - name: "Derived alias simple star without ORDER"
    sql: |
      SELECT t.*
      FROM (
        SELECT `date` AS `date`
        FROM `temperature`
      ) AS t
      LIMIT 3
    expect:
      rows: 3

cleanup:
  - sql: "DROP TABLE IF EXISTS temperature"
  - sql: "DROP TABLE IF EXISTS sensor"
